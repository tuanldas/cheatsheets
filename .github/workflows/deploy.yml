name: Build documentation

on:
  push:
    branches: [ "main" ]

  workflow_dispatch:

env:
  INSTANCE: Writerside/hi
  ARTIFACT: cheatsheets.zip
  DOCKER_VERSION: 232.10165.1
  ALGOLIA_ARTIFACT: algolia-indexes-HI.zip
  SSH_HOST: ${{ secrets.HOST }}
  SSH_USERNAME: ${{ secrets.SSH_USER }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  SSH_PORT: ${{ secrets.SSH_PORT }}
  PROJECT_PATH: /home/ubuntu/services/tuanldas/cheatsheets/builds

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build Writerside
        uses: JetBrains/writerside-github-action@v4
        with:
          instance: ${{ env.INSTANCE }}
          artifact: ${{ env.ARTIFACT }}
          docker-version: ${{ env.DOCKER_VERSION }}

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ env.SSH_PRIVATE_KEY }}
          known_hosts: unnecessary

      - name: Adding Known Hosts
        run: ssh-keyscan -p ${{ env.SSH_PORT }} -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts

      - name: Kiá»ƒm tra folder build
        uses: appleboy/ssh-action@v1.0.0
        env:
          PROJECT_PATH: ${{ env.PROJECT_PATH }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            if [ -d "${{ env.PROJECT_PATH }} " ]; then
              echo "Is a directory."
            else
              mkdir ${{ env.PROJECT_PATH }} 
              echo "Is a directory."
            fi

      - name: Deploy with rsync
        run: rsync -avz -e "ssh -p ${{ env.SSH_PORT }}" artifacts/${{ env.ALGOLIA_ARTIFACT }} ${{ env.SSH_USERNAME }}@${{ secrets.HOST }}:${{ env.PROJECT_PATH }}/${{ env.ALGOLIA_ARTIFACT }}

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v1.0.0
        env:
          PROJECT_PATH: ${{ env.PROJECT_PATH }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script:
            cd $PROJECT_PATH
